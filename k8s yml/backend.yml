# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: dntx-backend-spring
  name: dntx-backend-spring
  namespace: glenneligio
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dntx-backend-spring
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dntx-backend-spring
    spec:
      containers:
        - image: shuntjg/dntx-backend:0.0.2.1-BUGFIX
          imagePullPolicy: IfNotPresent
          name: dntx-backend-spring
          envFrom:
            - configMapRef:
                name: dntx-backend-spring-configmap
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 30
            periodSeconds: 50
      restartPolicy: Always

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: dntx-backend-spring-service # must match the proxy pass destination in nginx.conf of FRE
  namespace: glenneligio
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: dntx-backend-spring
  sessionAffinity: None
  # for standalone backend api testing, set the type to LoadBalancer and use port 8080 of the machine
  type: ClusterIP

---
# Configmap
apiVersion: v1
data:
  DNTX_MONGODB_HOST: dntx-backend-mongodb-service
  DNTX_MONGODB_PORT: "27017"
  DNTX_MONGODB_DATABASE: dntx
  DNTX_MONGODB_USERNAME: sampleuserprod
  DNTX_MONGODB_PASSWORD: samplepassprod
  DNTX_JWT_SECRET_KEY: samplesecretkeyprod
kind: ConfigMap
metadata:
  name: dntx-backend-spring-configmap
  namespace: glenneligio

---
# StatefulSet for Mysql Server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dntx-backend-mongodb
  namespace: glenneligio
spec:
  serviceName: "dntx-backend-mongodb-service"
  selector:
    matchLabels:
      app: dntx-backend-mongodb
  template:
    metadata:
      labels:
        app: dntx-backend-mongodb
    spec:
      containers:
        - name: dntx-backend-mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "sampleuserprod"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "samplepassprod"
          volumeMounts:
            - mountPath: /data/dntx
              name: dntx-backend-mongodb-data
  volumeClaimTemplates:
    - metadata:
        name: dntx-backend-mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: dntx-backend-mongodb-service
  namespace: glenneligio
spec:
  clusterIP: None
  selector:
    app: dntx-backend-mongodb
  ports:
    - port: 27017
      targetPort: 27017
